name: Docker

on:
  push:
    branches:
      - '**'
    tags:
      - '**'

# Automatically cancel previous runs for the same ref (i.e. branch) and event type. The latter component prevents
# manually dispatched events from being cancelled by pushes to the `master` branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build-and-push-image:
    name: Build and push image
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - final-build-stage: 'base'
            latest-tag-behaviour: auto
            version-suffix: ''
          - final-build-stage: amd
            latest-tag-behaviour: false
            version-suffix: '-amd'
          - final-build-stage: nvidia
            latest-tag-behaviour: false
            version-suffix: '-nvidia'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=${{ matrix.latest-tag-behaviour }}
            suffix=${{ matrix.version-suffix }}
          tags: |
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          target: ${{ matrix.final-build-stage }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
